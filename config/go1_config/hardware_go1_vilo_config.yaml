%YAML:1.0

#common parameters
imu: 1         
num_of_cam: 2  

robot_type: "go1"   # should be go1 or a1 
dataset_name: "20230304_wightman_park_flying_trot_right_loop"    # to keep track of datasets

imu_topic: "/unitree_hardware/imu"
image0_topic: "/camera_forward/infra1/image_rect_raw"
image1_topic: "/camera_forward/infra2/image_rect_raw"
output_path: "/home/rexlabcmu/zixin_ws/src/Cerberus2.0/bags/output"
# leg topics
leg_topic: "/unitree_hardware/joint_foot"

cam0_calib: "go1_realsense_left.yaml"
cam1_calib: "go1_realsense_right.yaml"
image_width: 640  
image_height: 480

# this variable shows when the robot starts, what is the initial base height
# if the vilo starts when the Go1 robot stands on the ground, then this should be 0.3
# if the vilo starts when the Go1 robot sits on the ground, then this should be 0.05
init_base_height: 0.3
   
# kf type 
kf_type:   0  # 0 is MIPO (multi-imu PO)
              # 1 is SIPO (standard single imu PO)

# leg related
vilo_fusion_type: 1  # 0 - do not use leg for preintegration (then this is just VIO)
                     # 1 - use LO velocity as preintegration
                     # 2 - tightly couple leg and imu for preintegration 

foot_gyro_n: 0.1
foot_gyro_w: 0.0002
joint_angle_n: 0.1
joint_vel_n: 0.1      
foot_vel_w: 0.0002
rho_w: 0.0002    

estimate_kinematic: 0  # 0 - do not estimate kinematic parameters
                       # 1 - estimate kinematic parameters                       

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0,  0,  1, 0.24, 
          -1,  0,  0, 0.025, 
           0, -1,  0, 0.1114, 
           0., 0., 0., 1. ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0,  0,  1, 0.24, 
          -1,  0,  0, -0.025, 
           0, -1,  0, 0.1114,  
           0., 0., 0., 1. ]

max_cnt: 120            # max feature number in feature tracking
min_dist: 10           # min distance between two features 
freq: 15                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.1  # max solver itration time (ms), to guarantee real time
max_num_iterations: 12   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.9          # accelerometer measurement noise standard deviation. #0.2   0.04
acc_n_z: 2.5
gyr_n: 0.05         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.0004         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0002       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: -0.02                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/rexlabcmu/zixin_ws/src/Cerberus2.0/bags/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
